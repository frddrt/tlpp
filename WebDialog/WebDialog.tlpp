#include "ferracini.ch"

class WebDialog
	data css as Character
	data dialogo as Object
	data filename as Character
	data html as Character
	data title as Character
	data webChannel as Object
	data events as Array

	public method new(title, filename) constructor
	public method close()
	public method open() as Logical
	public method setCss(css)
	public method setEvent(key, action)
	public method setHtml(html)
	public method jsToAdvpl(this, key, value)

	method createFile(fileName, content)
	method exportJs()
	method defaultHtml()
endclass

method new(title as Character, filename as Character) class WebDialog
	::filename := filename
	::title := title
	::html := ""
	::css := ""
	::events := {}
Return( self )

method createFile(fileName as Character, content as Character) class WebDialog
	Local handle as Numeric, path := IIF(getRemoteType() == 2, "l:", "") + getTempPath() as Character

	handle := fCreate(path + fileName)
    fWrite(handle, content)
    fClose(handle)
Return

method exportJs() class WebDialog
	Local i as Numeric, jsfiles := {::filename + ".js", "twebchannel.js"} as Array

	FOR i := 1 TO len(jsfiles)
		::createFile(jsfiles[i], getApoRes(jsfiles[i]))
	NEXT
Return

method close() class WebDialog
	IF ! empty(::dialogo)
		::webChannel:disconnect()
		freeObj(::webChannel)
		::webChannel := nil

		::dialogo:end()
		freeObj(::dialogo)
		::dialogo := nil
	ENDIF
Return

method open() class WebDialog
	Local result := true as Logical, webEngine as Object

	IF empty(::html)
		::html := ::defaultHtml()
	ENDIF

	::exportJs()
	::createFile(::filename + ".html", ::html)

	IF !empty(::css)
		::createFile(::filename + ".css", ::css)
	ENDIF

	::dialogo := msDialog():new(0, 0, 500, 800, ::title,,,,,,,,, true)
	::dialogo:lMaximized := true

	::webChannel := TWebChannel():New()
	::webChannel:connect()
	::webChannel:bJsToAdvpl := {|this, key, value| ::jsToAdvpl(this, key, value) }

	webEngine := TWebEngine():New(::dialogo, 0, 0, 100, 100, /*cUrl*/, ::webChannel:nPort)
	webEngine:align := CONTROL_ALIGN_ALLCLIENT

	webEngine:navigate(getTempPath() + ::filename + ".html")

	::dialogo:activate(,,, true,,,{|| })
Return( result )

method jsToAdvpl(this, key, value) class WebDialog
	Local i as Numeric

	FOR i := 1 TO len(::events)
		IF ::events[i][1] == key
			eval(::events[i][2], self, this, value)
		ENDIF
	NEXT
Return

method setCss(css as Character) class WebDialog
	::css := css
Return

method setEvent(key as Character, action as Codeblock) class WebDialog
	aAdd(::events, {key, action})
Return

method setHtml(html as Character) class WebDialog
	::html := html
Return

method defaultHtml() class WebDialog
	Local html as Character, filename := ::filename as Character

	BEGINCONTENT var html
		<!DOCTYPE html>
		<html>
			<head>
				<meta charset='Windows-1252'>
				<meta http-equiv='X-UA-Compatible' content='IE=edge'>
				<title>Painel de pedidos</title>
				<meta name='viewport' content='width=device-width, initial-scale=1'>
				<link rel='stylesheet' type='text/css' media='screen' href='%Exp:filename%.css'>

				<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
							integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
				<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
			</head>
			<body>
				<div id="app"></div>
				<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
					integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
				<script src="twebchannel.js"></script>
				<script src="%Exp:filename%.js"></script>
			</body>
		</html>
	ENDCONTENT
Return( html )
