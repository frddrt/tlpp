#include "ferracini.ch"

class StringBuilder
	data string as Character

	public method new() constructor
	public method append(value)
	public method addMany(value as Variadic)
	public method clear()
	public method toString()
endclass

method new() class StringBuilder
	::string := ""
Return self

method append(value) class StringBuilder
	local newValue as Character

	DO CASE
		CASE valType(value) == "N"; newValue := allTrim(str(value))
		CASE valType(value) == "D"; newValue := dToC(value)
		CASE valType(value) == "U"; newValue := ""
		OTHERWISE                 ; newValue := value
	ENDCASE

	::string += newValue
Return

method addMany(value as Variadic) class StringBuilder
	Local i as Numeric

	IF (valType(value) != "U")
		FOR i := 1 TO value:vCount
			::append(value:vArgs[i])
		NEXT
	ENDIF
Return

method clear() class StringBuilder
	::string := ""
Return

method toString() class StringBuilder
Return( ::string )
